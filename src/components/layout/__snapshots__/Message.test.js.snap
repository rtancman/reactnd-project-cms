// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ShowMessage Component when component renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ShowMessage
    message="Message"
    open={true}
    variant="success"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "anchorOrigin": Object {
        "horizontal": "center",
        "vertical": "top",
      },
      "autoHideDuration": 3000,
      "children": <WithStyles(MySnackbarContent)
        message="Message"
        onClose={[Function]}
        variant="success"
/>,
      "onClose": [Function],
      "open": true,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "message": "Message",
        "onClose": [Function],
        "variant": "success",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "anchorOrigin": Object {
          "horizontal": "center",
          "vertical": "top",
        },
        "autoHideDuration": 3000,
        "children": <WithStyles(MySnackbarContent)
          message="Message"
          onClose={[Function]}
          variant="success"
/>,
        "onClose": [Function],
        "open": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "message": "Message",
          "onClose": [Function],
          "variant": "success",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
